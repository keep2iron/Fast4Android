apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
if (MAVEN_LOCAL) {
    apply plugin: 'maven'
} else {
    apply plugin: 'com.novoda.bintray-release'
}

android {
    compileSdkVersion versions.build.target_sdk
    buildToolsVersion versions.build.build_tools

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion versions.build.target_sdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api deps.support.app_compat
    implementation deps.kotlin.stdlib_jdk7
    api 'io.github.keep2iron:peach:0.0.1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
}

if (MAVEN_LOCAL) {
    group = rootProject.ext.version_group
    version = rootProject.ext.version_base_style

    uploadArchives {
        repositories {
            mavenDeployer {
                // 唯一标识
                pom.groupId = rootProject.ext.version_group
                // 项目名称
                pom.artifactId = "fast4android-base-style"
                repository(url: uri(project.MAVEN_LOCAL_REPO))
                // 版本号
                pom.version = rootProject.ext.version_base_style
            }
        }
    }

    // 指定编码
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    // 打包源码
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.compile
    }

    // 制作文档(Javadoc)
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
} else {
    publish {
        userOrg = 'keep2iron'
        groupId = rootProject.ext.version_group
        artifactId = 'fast4android-base-style'
        publishVersion = rootProject.ext.version_base_style
        desc = 'fast4android'
        website = 'https://keep2iron.github.io'
    }
}
